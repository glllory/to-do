{"version":3,"sources":["reducers/index.js","reducers/uncompletedReducer.js","actions/types.js","reducers/completedReducer.js","components/Footer.js","containers/Layout.js","components/SocialButtonList.js","firebase/firebase.js","firebase/auth.js","components/Login.js","components/Header.js","components/SocialProfile.js","actions/index.js","components/Calendar.js","components/UnCompletedItem.js","components/UncompletedList.js","components/CompletedItem.js","components/CompletedList.js","components/List.js","components/ToDoApp.js","containers/App.js","containers/withAuthentication.js","serviceWorker.js","index.js"],"names":["combineReducers","uncompletedState","state","arguments","length","undefined","action","type","payload","completedState","Footer","react_default","a","createElement","Row","className","Col","xs","lg","md","href","Layout","_ref","children","Container","components_Footer","withRouter","history","buttonList","auth","authHandler","authData","push","console","error","Jumbotron","Object","keys","map","provder","currentUser","key","concat","onClick","e","provider","providerOAuth","signInWithPopup","then","catch","err","authenticate","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","UsersRef","ref","child","getAuth","githubOAuth","firebase_","GithubAuthProvider","twitterOAuth","TwitterAuthProvider","facebookOAuth","FacebookAuthProvider","googleOAuth","GoogleAuthProvider","github","visible","facebook","google","twitter","Login","_this","this","onAuthStateChanged","user","props","containers_Layout","components_SocialButtonList","Component","Header","m","isValid","currentHour","parseFloat","format","displayName","getGreetingTime","moment","dist_default","SocialProfileList","Fragment","src","providerData","photoURL","alt","providerName","components_Header","PureComponent","cleanEmail","uEmail","replace","addToDo","newToDo","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","set","stop","_x","apply","deleteToDo","ToDoID","_ref2","_callee2","_context2","remove","_x2","fetchToDos","_ref3","_callee3","_context3","on","snapshot","val","_x3","addCompleteToDo","completeToDo","_ref4","_callee4","_context4","_x4","deleteCompleteToDo","_ref5","_callee5","_context5","_x5","fetchCompletedToDos","_ref6","_callee6","_context6","_x6","deleteAll","_ref7","_callee7","_context7","_x7","deleteAllCompleted","_ref8","_callee8","_context8","_x8","Calendarbox","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","date","setState","Date","dateChange","react_datepicker_es","selected","deadline","onChange","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","React","UnCompletedItem","completeClick","todoId","todo","_this$props","getTime","task","deleteClick","_this$props2","_this2","_this$props3","formatted_date","getMonth","getDate","getFullYear","getHours","getMinutes","connect","UncompletedList","toDos","_","value","components_UnCompletedItem","isEmpty","CompletedItem","unCompleteClick","CompletedList","components_CompletedItem","List","inputChange","target","formSubmit","preventDefault","_this$state","onSubmit","disabled","name","id","placeholder","Calendar","renderForm","Button","size","components_UncompletedList","components_CompletedList","actions","ToDoApp","componentWillUnmount","signOut","SocialProfile","components_List","defaultProps","App","react_router_dom","basename","react_router","path","exact","component","WrappedComponent","_Component","WithAuthentication","_getPrototypeOf2","_len","args","Array","_key","componentDidMount","providerId","split","email","info","inherits","createClass","assign","Delay_default","wait","Spinner","animation","role","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","src_containers_App","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.009c6a8a.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport uncompleted from './uncompletedReducer';\nimport completed from './completedReducer';\n\nexport default combineReducers({\n    uncompletedState: uncompleted,\n    completedState: completed\n});\n","import { FETCH_TODOS } from '../actions/types';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_TODOS:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n","export const FETCH_TODOS = \"FETCH_TODOS\"\nexport const FETCH_COMPLETEDTODOS = \"FETCH_COMPLETEDTODOS\"","import { FETCH_COMPLETEDTODOS } from '../actions/types';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_COMPLETEDTODOS:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\n","import React from \"react\";\nimport { Row, Col } from 'reactstrap';\n\n\nconst Footer = () => {\n    return (\n        <div >\n            <Row className=\"justify-content-md-center footer\">\n                <Col xs lg=\"2\"></Col>\n                <Col md=\"auto\">Made with<i className=\"fas fa-heart\"></i></Col>\n                <Col xs lg=\"2\"></Col>\n            </Row>\n            <Row className=\"justify-content-md-center footer\">\n                <Col xs lg=\"2\"></Col>\n                <Col md=\"auto\">\n                    <a className=\"fb-ic\" href=\"mailto:mjd.s.m@hotmail.com\">\n                        <i className=\"fas fa-envelope mr-3 concat-icon fa-2x\">\n                        </i>\n                    </a>\n                    <a className=\"tw-ic\" href=\"https://github.com/glllory\">\n                        <i className=\"fab fa-github mr-3 concat-icon fa-2x\">\n                        </i>\n                    </a>\n                    <a className=\"gplus-ic\" href=\"https://www.linkedin.com/in/glllory\">\n                        <i className=\"fab fa-linkedin mr-3  concat-icon fa-2x\">\n                        </i>\n                    </a>\n\n                </Col>\n                <Col xs lg=\"2\"></Col>\n            </Row>\n\n        </div>\n    );\n}\n\nexport default Footer;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from '../components/Footer';\nimport { Row, Col, Container } from 'reactstrap';\nimport '../containers/App.scss';\n\nconst propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nconst Layout = ({ children }) => {\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col lg={8}>\n                        <main>{children}</main>\n                    </Col>\n                    <Col></Col>\n                </Row>\n                <Row>\n                    <Col></Col>\n                    <Col lg={8}>\n                        <Footer />\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nLayout.propTypes = propTypes;\n\nexport default Layout;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Jumbotron, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './bootstrap-social.css';\n\n\nconst propTypes = {\n    buttonList: PropTypes.shape({\n        github: PropTypes.shape({\n            provider: PropTypes.func.isRequired\n        }),\n        facebook: PropTypes.shape({\n            provider: PropTypes.func.isRequired\n        }),\n        google: PropTypes.shape({\n            provider: PropTypes.func.isRequired\n        }),\n        twitter: PropTypes.shape({\n            provider: PropTypes.func.isRequired\n        })\n    }).isRequired,\n    auth: PropTypes.func.isRequired,\n};\n\nconst SocialButtonList = ({ history, buttonList, auth }) => {\n\n    const authHandler = authData => {\n        if (authData) {\n            history.push('/todoapp');\n        } else {\n            console.error('Error authenticating');\n        }\n    };\n\n    const authenticate = (e, provider) => {\n        const providerOAuth = buttonList[provider].provider();\n        auth()\n            .signInWithPopup(providerOAuth)\n            .then(authHandler)\n            .catch(err => console.error(err));\n    };\n\n    const renderButtonList = provder => {\n        if (!auth().currentUser) {\n            return (\n                <button\n                    key={provder}\n                    className={`btn btn-block btn-social btn-${provder} btn-lg`}\n                    onClick={e => authenticate(e, provder)}\n                >\n                    <span className={`fab fa-${provder}`}></span>\n                    Sign in with  {provder}\n                </button>\n            );\n\n        }\n\n    };\n\n    return (\n        <Jumbotron>\n            <div className=\"text-center\">\n                <span className=\"greating\">Be More Productive & start create your To Do List<br />Sign in with your ...</span>\n            </div>\n            <Row className=\"login-butten\">\n                <Col></Col>\n                <Col lg={5}>\n                    {Object.keys(buttonList).map(renderButtonList)}\n                </Col>\n                <Col></Col>\n            </Row>\n        </Jumbotron>\n    );\n};\n\nSocialButtonList.propTypes = propTypes;\n\nexport default withRouter(SocialButtonList);\n","import * as firebase from 'firebase';\n\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: \"https://to-do-app-b236b.firebaseio.com\",\n    projectId: \"to-do-app-b236b\",\n    storageBucket: \"to-do-app-b236b.appspot.com\",\n    messagingSenderId: \"240038761244\"\n}\n\n\nconst app = firebase.initializeApp(config);\nconst databaseRef = firebase.database().ref();\nexport const UsersRef = databaseRef.child(\"Users\");\n\nexport default app;","import firebase from './firebase';\n\nexport const getAuth = () => {\n    return firebase.auth();\n};\n\nexport const githubOAuth = () => {\n    return new firebase.firebase_.auth.GithubAuthProvider();\n};\n\nexport const twitterOAuth = () => {\n    return new firebase.firebase_.auth.TwitterAuthProvider();\n};\n\nexport const facebookOAuth = () => {\n    return new firebase.firebase_.auth.FacebookAuthProvider();\n};\n\nexport const googleOAuth = () => {\n    return new firebase.firebase_.auth.GoogleAuthProvider();\n};\n\n","import React, { Component } from 'react';\nimport Layout from '../containers/Layout';\nimport SocialButtonList from './SocialButtonList';\nimport { auth } from '../firebase';\n\nconst buttonList = {\n    github: {\n        visible: true,\n        provider: () => auth.githubOAuth()\n    },\n    facebook: {\n        visible: true,\n        provider: () => auth.facebookOAuth()\n    },\n    google: {\n        visible: true,\n        provider: () => auth.googleOAuth()\n    },\n    twitter: {\n        visible: true,\n        provider: () => auth.twitterOAuth()\n    }\n};\n\nclass Login extends Component {\n\n    componentDidMount() {\n        auth.getAuth().onAuthStateChanged(user => {\n            if (user) {\n                this.props.history.push('/todoapp');\n            }\n        });\n    }\n\n    render() {\n        return (\n            <Layout>\n                <SocialButtonList buttonList={buttonList} auth={auth.getAuth} />\n            </Layout>\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport Moment from 'react-moment';\n\nclass Header extends Component {\n\n    getGreetingTime(m) {\n        var g = null; //return g\n\n        if (!m || !m.isValid()) { return; } //if we can't find a valid or filled moment, we return.\n\n        var split_afternoon = 12 //24hr time to split the afternoon\n        var split_evening = 17 //24hr time to split the evening\n        var currentHour = parseFloat(m.format(\"HH\"));\n\n        if (currentHour >= split_afternoon && currentHour <= split_evening) {\n            g = \"Afternoon\";\n        } else if (currentHour >= split_evening) {\n            g = \"Evening\";\n        } else {\n            g = \"Morning\";\n        }\n\n        return g;\n    }\n\n    render() {\n        var user = this.props.displayName;\n\n        if (user) {\n            return (\n                <div className=\"text-center\">\n                    <p className=\"greating username\">{`Hi, ${user}`}</p>\n                    <p className=\"todayTime\">{\"Good \" + this.getGreetingTime(moment()) + \", \"}It's <Moment format=\"ddd, D MMM YYYY, h:mm A\" /> </p>\n                </div>\n            )\n        } else {\n            return null;\n        }\n\n\n    }\n}\n\nexport default Header;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport { Row, Col } from 'reactstrap';\n\nclass SocialProfileList extends PureComponent {\n    static propTypes = {\n        providerData: PropTypes.arrayOf(PropTypes.object).isRequired,\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <Row>\n                    <Col ></Col>\n                    <Col lg={6} className=\"text-center\">\n                        <img\n                            src={this.props.providerData[0].photoURL}\n                            alt={this.props.providerData[0].providerName}\n                            className=\"profile--photo\"\n                        />\n                    </Col>\n                    <Col></Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Header displayName={this.props.providerData[0].displayName} />\n                    </Col>\n                </Row>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default SocialProfileList;","import { UsersRef } from '../firebase/firebase'\nimport { FETCH_TODOS, FETCH_COMPLETEDTODOS } from './types'\n\nconst cleanEmail = (uEmail) => {\n    return uEmail.replace(/\\./g, ',');\n}\n\n// Uncompleted To Do list \"child\"\nexport const addToDo = (newToDo, uEmail) => async dispatch => {\n    UsersRef.child(cleanEmail(uEmail)).child(\"todos\").push().set(newToDo);\n};\n\nexport const deleteToDo = (ToDoID, uEmail) => async dispatch => {\n    UsersRef.child(cleanEmail(uEmail)).child(\"todos\").child(ToDoID).remove();\n};\n\nexport const fetchToDos = (uEmail) => async dispatch => {\n    UsersRef.child(cleanEmail(uEmail)).child(\"todos\").on(\"value\", snapshot => {\n        dispatch({\n            type: FETCH_TODOS,\n            payload: snapshot.val()\n        });\n    });\n};\n\n// Completed To Do list \"child\"\nexport const addCompleteToDo = (completeToDo, uEmail) => async dispatch => {\n    UsersRef.child(cleanEmail(uEmail)).child(\"completetodos\").push().set(completeToDo);\n};\n\nexport const deleteCompleteToDo = (ToDoID, uEmail) => async dispatch => {\n    UsersRef.child(cleanEmail(uEmail)).child(\"completetodos\").child(ToDoID).remove();\n};\n\nexport const fetchCompletedToDos = (uEmail) => async dispatch => {\n    UsersRef.child(cleanEmail(uEmail)).child(\"completetodos\").on(\"value\", snapshot => {\n        dispatch({\n            type: FETCH_COMPLETEDTODOS,\n            payload: snapshot.val()\n        });\n    });\n};\n\n\n// delete all list\nexport const deleteAll = (uEmail) => async dispatch => {\n    UsersRef.child(cleanEmail(uEmail)).child(\"todos\").remove();\n    UsersRef.child(cleanEmail(uEmail)).child(\"completetodos\").remove();\n};\n\n// delete completed list\nexport const deleteAllCompleted = (uEmail) => async dispatch => {\n    UsersRef.child(cleanEmail(uEmail)).child(\"completetodos\").remove();\n};","import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Calendarbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: new Date()\n        };\n    }\n\n    handleChange = (date) => {\n        if (date) {\n            this.setState({ date });\n        } else {\n            this.setState({ date: new Date() });\n        }\n        this.props.dateChange({ date });\n    }\n\n    render() {\n        return (\n            <DatePicker\n                selected={this.props.deadline}\n                onChange={this.handleChange}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                timeIntervals={15}\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                timeCaption=\"time\"\n            />\n        );\n    }\n}\nexport default Calendarbox;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteToDo, addCompleteToDo } from '../actions';\n\nclass UnCompletedItem extends Component {\n\n    completeClick = (todoId, todo) => {\n        const { addCompleteToDo, deleteToDo, uEmail } = this.props;\n        deleteToDo(todoId, uEmail);\n        var nowTime = new Date();\n        addCompleteToDo(\n            { deadline: nowTime.getTime() / 1000 | 0, task: todo.task },\n            uEmail\n        );\n    };\n\n    deleteClick = todoId => {\n        const { deleteToDo, uEmail } = this.props;\n        deleteToDo(todoId, uEmail);\n    };\n\n    render() {\n        const { todoId, todo, uEmail } = this.props;\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        const date = new Date(todo.deadline * 1000);\n        let formatted_date = `${months[date.getMonth()]} ${date.getDate()},${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`\n\n        return (\n            <div className=\"item\">\n                <i className={\"far fa-circle\"} onClick={() => this.completeClick(todoId, todo, uEmail)}></i>\n                <i className=\"task-test-uncom\">{todo.task}</i>\n                <div className=\"rightButtons\">\n                    <i className=\"fas fa-times-circle\" onClick={() => this.deleteClick(todoId, uEmail)}></i>\n                </div>\n                <br />\n                <i className=\"task-deadline\">Due: {formatted_date}</i>\n            </div>\n        );\n\n    }\n}\n\nexport default connect(null, { deleteToDo, addCompleteToDo })(UnCompletedItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchToDos } from '../actions';\nimport _ from 'lodash';\nimport UnCompletedItem from './UnCompletedItem';\n\nclass UncompletedList extends Component {\n\n    componentWillMount() {\n        this.props.fetchToDos(this.props.uEmail);\n    }\n\n    render() {\n        const { uncompletedState, uEmail } = this.props;\n        const toDos = _.map(uncompletedState, (value, key) => {\n            return <UnCompletedItem key={key} todoId={key} todo={value} uEmail={uEmail} />;\n        });\n        if (!_.isEmpty(toDos)) {\n            return (\n                <div>\n                    <p>Tasks </p>\n                    {toDos}\n                </div>\n            );\n        }\n        return (\n            <div>\n                <p>Tasks </p>\n                <p className=\"todayTime\">You have nothing to do !</p>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ uncompletedState }) => {\n    return {\n        uncompletedState\n    }\n}\nexport default connect(mapStateToProps, { fetchToDos })(UncompletedList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteCompleteToDo, addToDo } from '../actions';\n\nclass CompletedItem extends Component {\n\n    unCompleteClick = (todoId, todo, uEmail) => {\n        const { deleteCompleteToDo, addToDo } = this.props;\n        deleteCompleteToDo(todoId, uEmail);\n        var nowTime = new Date();\n        addToDo(\n            { deadline: nowTime.getTime() / 1000 | 0, task: todo.task },\n            uEmail\n        );\n    };\n\n    deleteClick = todoId => {\n        const { deleteCompleteToDo, uEmail } = this.props;\n        deleteCompleteToDo(todoId, uEmail);\n    };\n\n    render() {\n        const { todoId, todo, uEmail } = this.props;\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        const date = new Date(todo.deadline * 1000);\n        let formatted_date = `${months[date.getMonth()]} ${date.getDate()},${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`\n\n        return (\n            <div className=\"item\">\n                <i className={\"fas fa-check-circle\"} onClick={() => this.unCompleteClick(todoId, todo, uEmail)}></i>\n                <i className=\"task-test-com\">{todo.task}</i>\n                <div className=\"rightButtons\">\n                    <i className=\"fas fa-times-circle\" onClick={() => this.deleteClick(todoId, uEmail)}></i>\n                </div>\n                <br />\n                <i className=\"task-deadline\">Completed on: {formatted_date}</i>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, { deleteCompleteToDo, addToDo })(CompletedItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCompletedToDos } from '../actions';\nimport _ from 'lodash';\nimport CompletedItem from './CompletedItem';\n\nclass CompletedList extends Component {\n\n    componentWillMount() {\n        this.props.fetchCompletedToDos(this.props.uEmail);\n    }\n\n    render() {\n        const { completedState, uEmail } = this.props;\n        const toDos = _.map(completedState, (value, key) => {\n            return <CompletedItem key={key} todoId={key} todo={value} uEmail={uEmail} />;\n        });\n        if (!_.isEmpty(toDos)) {\n            return (\n                <div>\n                    <hr className=\"my-2\" />\n                    <p>Completed Tasks</p>\n                    {toDos}\n                </div>\n            );\n        }\n        return (\n            null\n        );\n    }\n}\nconst mapStateToProps = ({ completedState }) => {\n    return {\n        completedState\n    }\n}\nexport default connect(mapStateToProps, { fetchCompletedToDos })(CompletedList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport Calendarbox from './Calendar';\nimport UncompletedList from './UncompletedList'\nimport CompletedList from './CompletedList'\nimport { Row, Col, Button } from 'reactstrap';\n\n\nclass List extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            task: \"\",\n            deadline: new Date(),\n            uEmail: this.props.uEmail\n        }\n    }\n\n    inputChange = e => {\n        this.setState({ task: e.target.value });\n    };\n\n    dateChange = date => {\n        this.setState({ deadline: date.date });\n    }\n\n    formSubmit = e => {\n        e.preventDefault();\n        const { task, deadline } = this.state;\n        const { addToDo } = this.props;\n        addToDo({\n            task, deadline: deadline.getTime() / 1000 | 0\n        },\n            this.state.uEmail\n        );\n        this.setState({ task: \"\", deadline: new Date() });\n    };\n\n    renderForm() {\n\n        return (\n            <form onSubmit={this.formSubmit}>\n                <Row>\n                    <Col xs={12} lg={6} md={6}>\n                        <button\n                            className='button'\n                            type='submit'\n                            disabled={!this.state.task}>\n                            <i className=\"fa fa-plus\"></i>\n                        </button>\n                        <input\n                            className='input'\n                            type='text'\n                            name='taskCont'\n                            value={this.state.task}\n                            onChange={this.inputChange}\n                            id=\"toDoNext\"\n                            placeholder=\"New Task\" />\n                    </Col>\n                    <Col xs={12} lg={6} md={6}>\n                        <button\n                            className='button'\n                            type='submit'\n                            disabled={!this.state.task}>\n                            <i className=\"fa fa-calendar-alt\"></i>\n                        </button>\n                        <Calendarbox\n                            dateChange={this.dateChange}\n                            deadline={this.state.deadline}\n                        />\n                    </Col>\n                </Row>\n            </form>\n        );\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <br />\n                <hr className=\"my-2\" />\n                {this.renderForm()}\n                <hr className=\"my-2\" />\n                <Row>\n                    <Col lg={6} className=\"text-center\">\n                    </Col>\n                    <Col className=\"text-right\">\n                        <Button size=\"sm\"\n                            onClick={() => this.props.deleteAll(this.state.uEmail)}\n                        >Delete All</Button>\n                        <Button size=\"sm\"\n                            onClick={() => this.props.deleteAllCompleted(this.state.uEmail)}\n                        >Delete Completed</Button>\n                    </Col>\n                </Row>\n                <UncompletedList uEmail={this.state.uEmail} />\n                <CompletedList uEmail={this.state.uEmail} />\n\n            </React.Fragment >\n        );\n    }\n}\n\nexport default connect(null, actions)(List);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../containers/Layout'\nimport SocialProfile from './SocialProfile';\nimport { auth } from '../firebase';\nimport List from './List';\nimport { Jumbotron, Button, Row, Col } from 'reactstrap';\n\nclass ToDoApp extends Component {\n    static propTypes = {\n        providerData: PropTypes.arrayOf(PropTypes.object).isRequired,\n        uEmail: PropTypes.string.isRequired\n    };\n\n    static defaultProps = {\n        providerData: [],\n        uEmail: \"\"\n    };\n\n    state = {\n        providerData: this.props.providerData,\n        uEmail: this.props.uEmail\n    };\n\n    componentWillUnmount = () => {\n        this.setState({ providerData: [], uEmail: \"\" });\n    }\n\n    render() {\n        return (\n            <Layout>\n                <Jumbotron>\n                    <Row>\n                        <Col ></Col>\n                        <Col lg={6} className=\"text-center\">\n                        </Col>\n                        <Col className=\"text-right\"><Button size=\"sm\" onClick={() => auth.getAuth().signOut()}> Sign Out </Button></Col>\n                    </Row>\n\n                    <SocialProfile\n                        providerData={this.state.providerData}\n                        uEmail={this.state.uEmail}\n                    />\n\n                    <List uEmail={this.state.uEmail} />\n                </Jumbotron>\n            </Layout>\n        );\n    }\n}\n\nexport default ToDoApp;","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Login from '../components/Login';\nimport ToDoApp from '../components/ToDoApp';\nimport withAuthentication from '../containers/withAuthentication';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename='/'>\n        <Switch>\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/todoapp\" component={withAuthentication(ToDoApp)} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport Delay from 'react-delay';\nimport { Spinner, Row, Col, Container } from 'reactstrap';\nimport Footer from '../components/Footer';\nimport { auth } from '../firebase';\nimport '../containers/App.scss';\n\nexport default WrappedComponent => {\n    class WithAuthentication extends Component {\n        state = {\n            providerData: [],\n            uEmail: \"\"\n        };\n\n        componentDidMount = () => {\n            auth.getAuth().onAuthStateChanged(user => {\n                if (user) {\n\n                    var providerId = user.providerData[0].providerId.split('.')[0];\n\n                    if (providerId === \"twitter\" || providerId === \"facebook\") {\n                        this.setState({\n                            providerData: user.providerData,\n                            uEmail: user.providerData[0].email\n                        });\n                    } else {\n                        this.setState({\n                            providerData: user.providerData,\n                            uEmail: user.email\n                        });\n                    }\n\n                } else {\n                    console.info('Must be authenticated');\n                    this.props.history.push('/');\n                }\n            });\n        }\n\n        componentWillUnmount = () => {\n            this.setState({ providerData: [] });\n        }\n\n        render() {\n            return this.state.providerData.length > 0 ? (\n                <WrappedComponent\n                    {...this.props}\n                    providerData={this.state.providerData}\n                    uEmail={this.state.uEmail}\n                />\n            ) : (\n                    <Container>\n                        <Row>\n                            <Col></Col>\n                            <Col lg={8}>\n                                <Delay wait={250}>\n                                    <Spinner animation=\"border\" role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </Spinner>\n                                </Delay>\n                            </Col>\n                            <Col></Col>\n                        </Row>\n                        <Row>\n                            <Col></Col>\n                            <Col lg={8}>\n                                <Footer />\n                            </Col>\n                            <Col></Col>\n                        </Row>\n                    </Container>\n                );\n        }\n    }\n\n    return WithAuthentication;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}